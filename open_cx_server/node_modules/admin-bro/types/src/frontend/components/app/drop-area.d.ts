/// <reference types="node" />
import React from 'react';
/**
 * @param {FileList | null} files
 * @returns {void}
 * @memberof DropArea
 * @alias OnUpload
 */
declare type OnUpload = (files: FileList | null) => void;
/**
 * @memberof DropArea
 * @alias FileObject
 */
declare type FileObject = {
    /**
     * File size in bytes
     */
    size: number;
    /**
     * Original file name
     */
    name: string;
    /**
     * Mime Type
     */
    type?: string;
    /**
     * Actual file buffer.
     */
    file?: Buffer;
};
/**
 * @memberof DropArea
 */
declare type Props = {
    /**
     * When given UI will show that file of this name and this size has been set.
     */
    fileObject?: FileObject;
    /**
     * Callback performed when the file is dropped/selected
     */
    onUpload: OnUpload;
    /**
     * Name of the property - used as an input id.
     */
    propertyName: string;
    /**
     * Validate options
     */
    validate?: {
        /**
         * Maximum size of the uploaded file in bytes. If not defined - all files are allowed.
         */
        maxSize?: number;
        /**
         * Avaliable mime types. When not defined - all mime types are allowed.
         */
        mimeTypes?: Array<string>;
    };
};
declare const _default: React.ComponentClass<Props, any>;
export default _default;
